"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.BaseShape = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var responsive_1 = require("../helpers/responsive");
var utils_1 = require("../utils/utils");
var error_1 = require("../helpers/error");
var BaseShape = function (_a) {
    var children = _a.children, height = _a.height, width = _a.width, _b = _a.position, position = _b === void 0 ? "absolute" : _b, _c = _a.top, top = _c === void 0 ? "" : _c, _d = _a.left, left = _d === void 0 ? "" : _d, _e = _a.right, right = _e === void 0 ? "" : _e, _f = _a.bottom, bottom = _f === void 0 ? "" : _f, _g = _a.className, className = _g === void 0 ? "anim-shapes" : _g, _h = _a.zIndex, zIndex = _h === void 0 ? "-1" : _h, _j = _a.breakpoints, breakpoints = _j === void 0 ? [600, 900, 1200] : _j;
    if (!(0, error_1.checkNonDecreasing)(breakpoints) ||
        !(0, error_1.checkDim)(top, breakpoints.length) ||
        !(0, error_1.checkDim)(left, breakpoints.length) ||
        !(0, error_1.checkDim)(right, breakpoints.length) ||
        !(0, error_1.checkDim)(bottom, breakpoints.length)) {
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {}, void 0);
    }
    var responsiveHeight = (0, utils_1.expandValues)(height, breakpoints.length);
    var responsiveWidth = (0, utils_1.expandValues)(width, breakpoints.length);
    var responsiveTop = (0, utils_1.expandValues)(top, breakpoints.length);
    var responsiveLeft = (0, utils_1.expandValues)(left, breakpoints.length);
    var responsiveRight = (0, utils_1.expandValues)(right, breakpoints.length);
    var responsiveBottom = (0, utils_1.expandValues)(bottom, breakpoints.length);
    return ((0, jsx_runtime_1.jsx)(responsive_1.ResponsiveShape, __assign({ bottom: responsiveBottom, breakpoints: breakpoints, className: className, height: responsiveHeight, left: responsiveLeft, position: position, right: responsiveRight, top: responsiveTop, width: responsiveWidth, zIndex: zIndex }, { children: children }), void 0));
};
exports.BaseShape = BaseShape;
